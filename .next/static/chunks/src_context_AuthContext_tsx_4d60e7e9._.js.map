{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Documents/SEMESTER_7/web-magang/frontend-magang/src/context/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  ReactNode,\r\n} from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\"; // gunakan named import\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n};\r\n\r\ntype AuthContextType = {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<User>; // ✅ return User\r\n  logout: () => void;\r\n};\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      try {\r\n        const decoded: any = jwtDecode(token);\r\n        setUser({\r\n          id: decoded.id,\r\n          name: decoded.name,\r\n          email: decoded.email,\r\n          role: decoded.role,\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Token invalid\", err);\r\n        logout();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<User> => {\r\n    try {\r\n      const res = await fetch(\"/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.error || \"Login gagal\");\r\n\r\n      localStorage.setItem(\"token\", data.token);\r\n      const decoded: any = jwtDecode(data.token);\r\n\r\n      const loggedInUser: User = {\r\n        id: decoded.id,\r\n        name: data.user.name,\r\n        email: data.user.email,\r\n        role: data.user.role,\r\n      };\r\n\r\n      setUser(loggedInUser);\r\n      return loggedInUser; // ✅ dikembalikan\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth(): AuthContextType {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEA;AAOA,2QAAwC,uBAAuB;;;AAT/D;;;AAwBO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAE/D,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,OAAO;gBACT,IAAI;oBACF,MAAM,UAAe,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE;oBAC/B,QAAQ;wBACN,IAAI,QAAQ,EAAE;wBACd,MAAM,QAAQ,IAAI;wBAClB,OAAO,QAAQ,KAAK;wBACpB,MAAM,QAAQ,IAAI;oBACpB;gBACF,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,iBAAiB;oBAC/B;gBACF;YACF;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,mBAAmB;gBACzC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAE3C,aAAa,OAAO,CAAC,SAAS,KAAK,KAAK;YACxC,MAAM,UAAe,CAAA,GAAA,yJAAA,CAAA,YAAS,AAAD,EAAE,KAAK,KAAK;YAEzC,MAAM,eAAqB;gBACzB,IAAI,QAAQ,EAAE;gBACd,MAAM,KAAK,IAAI,CAAC,IAAI;gBACpB,OAAO,KAAK,IAAI,CAAC,KAAK;gBACtB,MAAM,KAAK,IAAI,CAAC,IAAI;YACtB;YAEA,QAAQ;YACR,OAAO,cAAc,iBAAiB;QACxC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;IACV;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;QAAO;kBAChD;;;;;;AAGP;GA9DgB;KAAA;AAgET,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}